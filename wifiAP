#!/usr/bin/env bash

# Script to start / stop WiFi AP and bridge eth1
# https://github.com/openenergymonitor/emonpi/blob/master/docs/wifiAP.md
# Only works with RasPi 3 or
	
if [ $EUID -ne 0 ]; then
   echo "This script must be run as root"
   exit 1
fi


if [ -z "$1" ]; then
    echo "Please specify start or stop as argument"
    exit 1
fi


#driver= basename $( readlink /sys/class/net/wlan0/device/driver ) | tr -d "\n"
#echo "$driver"
#driver="brcmfmac_sdio"
#if [ "${driver}" != "brcmfmac_sdio " ]; then
#    echo "Exiting Wifi AP requires rtl8192cu / brcmfmac_sdio driver (BCM43143) e.g. RasPi3 / offical RasPi dongle"
#    echo "Edimax can be used with different version of hostpad https://github.com/openenergymonitor/emonpi/blob/master/docs/wifiAP.md"
#    exit 1
#fi


if [ "$1" = "start" ]; then

	sudo ifdown wlan0
	sleep 5
	sudo ifconfig wlan0 down
    sleep 5
	echo "Set static IP addres of emonPi AP 192.168.42.1"
	sudo ifconfig wlan0 192.168.42.1
    sleep 5
	# Start DHCP server to offer AP clients DHCP
	echo "Start isc-dhcp-server"
	sudo service isc-dhcp-server start
	sleep 5

	# Start AP -  /etc/hostapd/hostapd.conf
	echo "Start emonPi Wifi AP...."
	sudo touch /home/pi/data/dhcpd.leases
	sudo service hostapd start
	
	# if eth1 exists and is up then bridge to wlan0
	FOUND=`grep "eth1" /proc/net/dev`
    if  [ -n "$FOUND" ] ; then
        eth1_state = $(cat /sys/class/net/eth1/operstate)
        if [ "$eth1_state"  = "up" ]; then
            echo "eth1 up"
            echo "Bridge eth1 (GSM dongle) to WiFi AP"
            # Try and Remove bridge routes so we don't add double if exits
            sudo iptables -t nat -D POSTROUTING -o eth1 -j MASQUERADE >/dev/null 2>&1
            sudo iptables -D FORWARD -i eth1 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT >/dev/null 2>&1
            sudo iptables -D FORWARD -i wlan0 -o eth1 -j ACCEPT >/dev/null 2>&1
            # Add nerw bridge rules
            sudo iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
            sudo iptables -A FORWARD -i eth1 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
            sudo iptables -A FORWARD -i wlan0 -o eth1 -j ACCEPT
        fi
    fi
fi

if [ "$1" = "stop" ]; then
        echo "Stop hostapd Wifi AP"
        sudo service hostapd stop
        echo "Stop isc-dhcp-server"
        sudo service isc-dhcp-server stop
        sleep 5
        sudo ifconfig wlan0 down
        sleep 5
        sudo ifup wlan0
        #sudo wpa_supplicant -D nl80211 -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf
        
        
        # Remove bridge routes
        sudo iptables -t nat -D POSTROUTING -o eth1 -j MASQUERADE >/dev/null 2>&1
        sudo iptables -D FORWARD -i eth1 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT >/dev/null 2>&1
        sudo iptables -D FORWARD -i wlan0 -o eth1 -j ACCEPT >/dev/null 2>&1
fi
